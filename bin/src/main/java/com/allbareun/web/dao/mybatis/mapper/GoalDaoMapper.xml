<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allbareun.web.dao.GoalDao">


	<insert id="insert">
		INSERT INTO Goal
		(
		`title`,
		`explanation`,
		`mainImage`,
		<if test="goodEx != null and goodEx != ''">
			`goodEx`,
			`badEx`,
		</if>
		`count`,
		`exExplanation`,
		`startDate`,
		`endDate`,
		`publicStatus`,
		`userId`,
		`totalParticipants`
		)
		VALUES
		(
		#{title},
		#{explanation},
		#{mainImage},
		<if test="goodEx != null and goodEx != ''">
			#{goodEx},
			#{badEx},
		</if>
		#{count},
		#{exExplanation},
		#{startDate},
		#{endDate},
		#{publicStatus},
		#{userId},
		#{totalParticipants}
		);
	</insert>

	<insert id="makeGoal">
		INSERT INTO Goal
		(
		`title`,
		`explanation`,
		`mainImage`,
		`goodEx`,
		`badEx`,
		`startDate`,
		`endDate`,
		`userId`,
		`exExplanation`
		)
		VALUES
		(
		"",
		"",
		"",
		"",
		"",
		"1900-01-01",
		"1900-01-01",
		#{userId},
		""
		)
	</insert>

	<update id="update">
		UPDATE Goal
		<choose>
			<when test="userId == 0">
				SET userId = null
				where id = #{id}
			</when>
			<otherwise>
				SET
					title = #{title},
					explanation = #{explanation},
					mainImage = #{mainImage},
					`goodEx` = #{goodEx},
					`badEx` = #{badEx},
					`startDate` = #{startDate},
					`endDate` = #{endDate},
					`publicStatus` = #{publicStatus},
					`count` = #{count},
					`totalParticipants` = #{totalParticipants},
					`exExplanation` = #{exExplanation}
				WHERE id = #{id}
			</otherwise>
		</choose>
	</update>

	<delete id="delete">
		DELETE FROM Goal
		WHERE id=${goalId}
	</delete>

	<select id="get" resultType="com.allbareun.web.entity.Goal">
		select * from Goal where id = #{id}
	</select>

	<select id="getAllView"
		resultType="com.allbareun.web.entity.GoalAllView">
		select * from GoalAllView where id = #{id};
	</select>

	<select id="getViewList"
		resultType="com.allbareun.web.entity.GoalView">
		select * from GoalView where publicStatus=1
		<if test="categories != null and categories !=''">
			and categories like concat('%',replace(#{categories},
			',','%'),'%')
		</if>
		<if test="startDate != null and startDate !=''">
			and date_format(startDate, '%Y-%m-%d') &gt;=#{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
			and date_format(endDate, '%Y-%m-%d')&lt;=#{endDate}
		</if>
		<if test="days != null and days !=''">
			and days like concat('%',replace(#{days}, ',','%'),'%')
		</if>
		<if test="totalParticipants != null and totalParticipants !=0">
			and totalParticipants = #{totalParticipants}
		</if>

		<if test="query != null and query !=''"> 
		and title like '%${query}%'
		</if>
		order by startDate desc 
	<if test="count != null and count !=0">
		limit #{count} 
	 </if>
	<if test="offset != null and offset !=0">
		offset #{offset}
	 </if>
	 		
   </select>


	<select id="getAllViewList" resultType="com.allbareun.web.entity.GoalAllView">
		select GAV.*
		from(select GV.*, ROUND((CV.certCnt / (GV.count * GV.dateDiff)) * 100, 2) achievement
			from GoalAllParticipantsView GPV
			left join GoalAllView GV on GPV.goalId = GV.id
			left join (select userId, goalId, count(id) certCnt
						from Certification
						group by goalId, userId) CV
						on GPV.goalId = CV.goalID and GPV.userId = CV.userId
			where GPV.userId = #{userId}
			<choose>
				<when test="status.equals('present')">
					and now() &lt;= endDate
				</when>
				<otherwise>
					and endDate &lt; now()
				</otherwise>
			</choose>
	
			<choose>
				<when test="totalParticipants == 1">
					and totalParticipants = 1
				</when>
				<when test="totalParticipants == 2">
					and totalParticipants > 1
				</when>
			</choose>
	
			<if test="query != null and query != ''">
				and (GV.title LIKE '%${query}%' OR GV.participants LIKE '%${query}%')
			</if>
	
			<if test="categories != null and categories !=''">
				and
				<foreach item="category" index="index" collection="categories" open="(" separator="OR" close=")">
					categories
					like '%${category}%'
				</foreach>
			</if>
		) GAV
		<choose>
			<when test="achievement == 0">
				where achievement &lt; 80
			</when>
			<when test="achievement == 1">
				where 80 &lt;= achievement
			</when>
		</choose>
	</select>



	<select id="getDetailView"
		resultType="com.allbareun.web.entity.GoalDetailView">
		select * from GoalView GV
		left join Goal G on GV.id = G.id
		left join GoalDetailView GDV on GDV.id = G.id
		where GV.id = ${param1}
	</select>

	<select id="getProfile"
		resultType="com.allbareun.web.entity.GoalAllParticipantsView">
	select * from GoalAllParticipantsView where goalId = ${param1} order by userName;

	</select>




	<select id="getAuthImages"
		resultType="com.allbareun.web.entity.CertificationView">
		select * from CertificationView
		where goalId = ${param1} and
		regdate between ADDDATE(sysdate(),(-15 + date_format(sysdate(),'%w')))
		and ADDDATE(sysdate(),(4 + date_format(sysdate(),'%w')));

	</select>

	<insert id="enter"
		parameterType="com.allbareun.web.entity.Participation">
		insert into Participation (userId,goalId) values
		(#{userId},#{goalId});
	</insert>





	<select id="getLastInserted"
		resultType="com.allbareun.web.entity.Goal">
		select * from Goal
		where userId = #{userId}
		order by regdate desc
		limit 1;
	</select>

	<select id="getParticipantsId" resultType="string">
		select
		CASE
		WHEN
		(isnull(b.초대응한사람) AND isnull(b.지인)) THEN b.목표개설자
		WHEN
		(isnull(b.초대응한사람)) THEN concat( b.목표개설자,',',b.지인)
		WHEN (isnull(b.지인))
		THEN concat( b.목표개설자,',',b.초대응한사람)
		END AS
		participantsId
		from (
		select
		a.id, a.목표개설자, group_concat(distinct
		a.초대응한사람 separator ',') as 초대응한사람,
		group_concat(DISTINCT a.지인
		separator ',') as 지인 from (
		select
		G.id,G.userId
		목표개설자,GR.requestReceiveUserId 초대응한사람, P.userId 지인 from
		(
		Goal G
		left join
		(SELECT goalId,requestReceiveUserId, answer from
		a11.Group where
		answer=1) GR on GR.goalId= G.Id
		left join Participation
		P on P.goalId =
		G.Id
		)) a group by a.id ) b where id=#{goalId};
   </select>
   
   
	<select id="getinfo" resultType="int">
		select id from User where email = #{param1};
	</select>

	<select id="getStartDate" resultType="Date">
		select startDate from Goal where id = #{param1};
	</select>

	<select id="getEndDate" resultType="Date">
		select endDate from Goal where id = #{param1};
	</select>

	<select id="getInvitedList" resultType="com.allbareun.web.entity.GoalAllView">
		select GAV.* from GoalAllView GAV
		right join  (select * from `Group` where requestReceiveUserId = #{userId} and answer = 0) GV on GAV.id = GV.goalId
		<if test="query != null and query != ''">
			where (GAV.title LIKE '%${query}%' OR GAV.participants LIKE '%${query}%')
		</if>
		<if test="categories != null and categories !=''">
			<choose>
				<when test="query != null and query != ''">and</when>
				<otherwise>where</otherwise>
			</choose>
			<foreach item="category" index="index" collection="categories" open="(" separator="OR" close=")">
				categories like '%${category}%'
			</foreach>
		</if>
	</select>
	
</mapper>